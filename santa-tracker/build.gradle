apply plugin: 'com.android.application'

ext.densityList = ['mdpi', 'hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi']
ext.abiList = ['armeabi', 'armeabi-v7a', 'x86']
ext.splitEnabled = true

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.tools

    defaultConfig {
        applicationId "com.google.android.apps.santatracker"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 40120002
        versionName "4.0.12"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            // Enabling multidex support.
            multiDexEnabled true
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.txt'
        }
    }

   flavorDimensions "devProd"

    productFlavors {
        production {
        }
        development {
            minSdkVersion 24        // Tip 2
            resConfigs ("en", "xxhdpi")   // Tip 4

        }
    }
    packagingOptions {
        pickFirst 'lib/armeabi-v7a/libvrtoolkit.so'
    }

    variantFilter { variant ->
        // 'development' flavor is only available for debug build
        if (!variant.buildType.name.equals('debug') &&
                variant.getFlavors().get(0).name.equals("development")) {
            variant.setIgnore(true)
        }
    }

    boolean ciBuild = System.getenv("CI")
    splitEnabled = ciBuild                   // Tip 3
    aaptOptions.cruncherEnabled = ciBuild    // Tip 5




   splits {
        abi {
            enable splitEnabled

            // Include the three architectures that we support for snowdown
            reset()
            include(*abiList)

            // Only enable universal build when building dogfood or release
            def taskList = gradle.startParameter.taskNames.join(",")
            def isDogfood = taskList.contains("assembleDogfood")
            def isRelease = taskList.contains("assembleRelease")
            universalApk (isDogfood || isRelease)
        }

        density {
            // TODO: re-enable when we can figure out how to include <=dpi, not just =dpi
            // as this is preventing games from auto-downsampling bitmaps to prevent OOMs
            enable false
            reset()
            include(*densityList)
            compatibleScreens 'small', 'normal', 'large', 'xlarge'
        }
    }
}
// Apply signing configurations, keys and other non-version-controlled things
if (file('../internal/santa-tracker.gradle').exists()) {
    apply from: '../internal/santa-tracker.gradle'
}

// Generate unique versionCodes for each APK variant: ZXYYSSSSS
//   Z is the Major version number
//   X is the Minor version number
//   YY is the Path version number
//   SSSS is information about the split (default to 0000)
// Any new variations get added to the front
import com.android.build.OutputFile;
android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        // Shift abi over by 8 digits
        def abiFilter = output.getFilter(OutputFile.ABI)
        int abiVersionCode = (abiList.indexOf(abiFilter) + 1)

        // Merge all version codes
        output.versionCodeOverride = variant.mergedFlavor.versionCode + abiVersionCode
    }
}

// Support library aar dependencies are loaded from the SDK
dependencies {
    implementation project(':village')
    implementation project(':common')
    implementation project(':dasherdancer')
    implementation project(':rocketsleigh')
//    implementation project(':snowdown')
    implementation project(':doodles')
    implementation project(':presentquest')
//    wearApp project(':wearable')

    implementation files('../third_party/jbox2d/jbox2d-library-2.2.1.1.jar')
    implementation files('../third_party/youtube/YouTubeAndroidPlayerApi.jar')

    implementation rootProject.ext.supportV4
    implementation rootProject.ext.design
    implementation rootProject.ext.appCompat
    implementation rootProject.ext.design
    implementation rootProject.ext.mediaRouter
    implementation rootProject.ext.cardView
    implementation rootProject.ext.recyclerView
    implementation rootProject.ext.leanback
    implementation rootProject.ext.multidex

    implementation rootProject.ext.glide
    implementation rootProject.ext.androidMapsUtils

    implementation rootProject.ext.playServicesAppindexing
    implementation rootProject.ext.playServicesBase
    implementation rootProject.ext.playServicesBasement
    implementation rootProject.ext.playServicesCastFramework
    implementation rootProject.ext.playServicesGames
    implementation rootProject.ext.playServicesMaps
    implementation rootProject.ext.playServicesWearable

    implementation rootProject.ext.firebaseCore
    implementation rootProject.ext.firebaseAnalytics
    implementation rootProject.ext.firebaseConfig
    implementation rootProject.ext.firebaseCrash
    implementation rootProject.ext.firebaseStorage

    developmentImplementation rootProject.ext.leakCanary
    productionImplementation rootProject.ext.leakCanaryNoOp

    androidTestImplementation rootProject.ext.espressoCore, {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    androidTestImplementation rootProject.ext.espressoContrib, {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
}

//apply plugin: 'com.google.gms.google-services'
